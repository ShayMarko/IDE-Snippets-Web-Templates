{
	"sm::createStateTable": {
		"prefix": "sm::createStateTable",
		"body": [
			"import axios from \"axios\";",
			"import { Component } from \"react\";",
			"import RankModel from \"../../../Models/RankModel\";",
			"import \"./RankBoard.css\";",
			"",
			"",
			"interface CatListState {",
			"\\ttableData: RankModel[];",
			"}",
			"",
			"class RankBoard extends Component <{}, CatListState> {",
			"",
			"    public constructor(props: {}) {",
			"        super(props);",
			"        this.state = {",
			"\\t\\t\\ttableData:[]",
			"        };",
			"    }",
			"",
			"",
			"    public async componentDidMount(){",
			"        const response = await axios.get<RankModel[]>('https://raw.githubusercontent.com/KobiShashs/Caas-Resources/master/cats.json');;",
			"\\t\\tthis.setState({tableData: response.data});",
			"    }",
			"",
			"    public render(): JSX.Element {",
			"        return (",
			"            <div className=\"RankBoard\">",
			"                    <table>",
			"                    <thead>",
			"                        <tr>",
			"                            <th>Id</th>",
			"                            <th>Username</th>",
			"                            <th>Answered Questions</th>",
			"                            <th>Correct Answers</th>",
			"                            <th>Score</th>",
			"{/*                             <th>Actions <button>‚ûï</button></th> */}",
			"                        </tr>",
			"                    </thead>",
			"                    <tbody>   ",
			"                                {this.state.tableData.map(member => ",
			"                                <tr>",
			"                                    <td>{member.id}</td>",
			"                                    <td>{member.name}</td>",
			"                                    <td>{member.weight}</td>",
			"                                    <td>{member.color}</td>",
			"{/*                                     <td><img src={c.image}/></td> */}",
			"{/*                                     <td><button>üóëÔ∏è</button><button>‚úèÔ∏è</button></td> */}",
			"                                    <td>1234567</td>",
			"                                    </tr>)}",
			"                    </tbody>",
			"                    </table>",
			"            </div>",
			"        );",
			"    }",
			"}",
			"",
			"",
			"export default RankBoard;",
			"",
			"",
			"",
			"/* ",
			"CSS:",
			".RankBoard {",
			"}",
			"",
			".RankBoard img {",
			"    width: 50px;",
			"    height: 50px;",
			"    border: 1px dashed white;",
			"    margin: 5px;",
			"}",
			"",
			".RankBoard table {",
			"margin: auto;",
			"    display: inline-block;",
			"}",
			"",
			".RankBoard table, th,td {",
			"border: 1px solid black;",
			"}",
			"",
			".RankBoard tr:nth-child(even) {",
			"background-color: rgb(194, 189, 189);",
			"}",
			"",
			".RankBoard tr:nth-child(odd) {",
			"background-color: white;",
			"}",
			"",
			".RankBoard th {",
			"background-color: #4aa6c0;",
			"color: black;",
			"}",
			"",
			".RankBoard div {  ",
			"height: 80%;",
			"overflow: auto;",
			"}",
			"",
			"",
			"Model:",
			"class RankModel {",
			"    public id?:number;",
			"    public name?:string;",
			"    public weight?: number;",
			"    public color?: string;",
			"    public image? : string;",
			"}",
			"",
			"export default RankModel; */"
		],
		"description": "Creates a dynamic table using Axios and State"
	},
	"sm::createStatelessTable": {
		"prefix": "sm::createStatelessTable",
		"body": [
			"import \"./StatelessTable.css\";",
			"",
			"function StatelessTable(): JSX.Element {",
			"    const arrX = [",
			"        {\"firstval\":\"aaaa\", \"secondval\":\"bbbb\", \"thirdval\":\"cccc\", \"fourthval\":\"dddd\"},",
			"        {\"firstval\":\"aaaa\", \"secondval\":\"bbbb\", \"thirdval\":\"cccc\", \"fourthval\":\"dddd\"}, ",
			"        {\"firstval\":\"aaaa\", \"secondval\":\"bbbb\", \"thirdval\":\"cccc\", \"fourthval\":\"dddd\"}];",
			"    return (",
			"        <div className=\"StatelessTable\">",
			"            <table>",
			"                <thead>",
			"                    <tr>",
			"                        <th>Header1</th>",
			"                        <th>Header2</th>",
			"                        <th>Header3</th>",
			"                        <th>Header4</th>",
			"                    </tr>",
			"                </thead>",
			"                <tbody>",
			"                    {arrX.map(o =>",
			"                        <tr>",
			"                            <td>{o.firstval}</td>",
			"                            <td>{o.secondval}</td>",
			"                            <td>{o.thirdval}</td>",
			"                            <td>{o.fourthval}</td>",
			"                        </tr>",
			"                    )}",
			"                </tbody>",
			"            </table>",
			"        </div>",
			"    );",
			"}",
			"",
			"export default StatelessTable;",
			"",
			"/*",
			"CSS:",
			".StatelessTable table {",
			"\\twidth: 50px;",
			"    height: 50px;",
			"    margin: auto;",
			"    border: 1px solid black;",
			"}",
			"",
			".StatelessTable table, th, td {",
			"    border-top: 1px solid black;",
			"}",
			"",
			".StatelessTable table {",
			"    margin: auto;",
			"}",
			"",
			".StatelessTable tr:nth-child(even) {",
			"    background-color: rgb(247, 239, 239);",
			"}",
			"",
			".StatelessTable tr:nth-child(odd) {",
			"    background-color: rgb(124, 96, 96);",
			"} ",
			"",
			".StatelessTable tr:first-child, tr:nth-child(odd) {",
			"    background-color: rgb(151, 149, 149);",
			"}",
			"",
			".StatelessTable div {",
			"    height: 80px;",
			"    overflow: auto;",
			"}",
			"",
			".StatelessTable th { ",
			"    background-color: yellowgreen;",
			"    color: black;",
			"}",
			"*/",
			""
		],
		"description": "Creates stateless table which maps data from an array"
	},
	"sm::SideRibbonBanner": {
		"prefix": "sm::SideRibbonBanner",
		"body": [
			"import React from \"react\";",
			"import { NavLink } from \"react-router-dom\";",
			"import \"./SideBanner.css\";",
			"",
			"function SideBanner(): JSX.Element {",
			"    return (",
			"        <div className=\"ribbonBox\">",
			"\\t\\t\\t<div className=\"ribbon ribbon-top-left\"><span><NavLink to=\"/contact\">Contact</NavLink></span></div>",
			"        </div>",
			"    );",
			"}",
			"",
			"export default SideBanner;",
			"",
			"/*",
			"CSS:",
			"@import url(https://fonts.googleapis.com/css?family=Lato:700);",
			".SideBanner {",
			"    display: flex;",
			"    justify-content: center;",
			"    align-items: center;",
			"    min-height: 100vh;",
			"    background: #f0f0f0;",
			"}",
			"   ",
			".ribbonBox {",
			"    position: relative;",
			"    background: #fff;",
			"    box-shadow: 0 0 15px rgba(0,0,0,.1);",
			"  }",
			"  ",
			"  .ribbon {",
			"    width: 150px;",
			"    height: 150px;",
			"    overflow: hidden;",
			"    position: absolute;",
			"  }",
			"",
			"  .ribbon::before,",
			"  .ribbon::after {",
			"    position: absolute;",
			"    z-index: -1;",
			"    content: '';",
			"    display: block;",
			"    border: 5px solid #2980b9;",
			"  }",
			"",
			"  .ribbon span {",
			"    position: absolute;",
			"    display: block;",
			"    width: 225px;",
			"    padding: 15px 0;",
			"    background-color: #3498db;",
			"    box-shadow: 0 5px 10px rgba(0,0,0,.1);",
			"    color: #fff;",
			"    font: 700 18px/1 'Lato', sans-serif;",
			"    text-shadow: 0 1px 1px rgba(0,0,0,.2);",
			"    text-transform: uppercase;",
			"    text-align: center;",
			"  }",
			"  ",
			"  .ribbon-top-left {",
			"    top: -10px;",
			"    left: -10px;",
			"  }",
			"  ",
			"  .ribbon-top-left::before,",
			"  .ribbon-top-left::after {",
			"    border-top-color: transparent;",
			"    border-left-color: transparent;",
			"  }",
			"",
			"  .ribbon-top-left::before {",
			"    top: 0;",
			"    right: 0;",
			"  }",
			"",
			"  .ribbon-top-left::after {",
			"    bottom: 0;",
			"    left: 0;",
			"  }",
			"",
			"  .ribbon-top-left span {",
			"    right: -25px;",
			"    top: 30px;",
			"    transform: rotate(-45deg);",
			"  }",
			"  ",
			"  .ribbon-top-right {",
			"    top: -10px;",
			"    right: -10px;",
			"  }",
			"",
			"  .ribbon-top-right::before,",
			"  .ribbon-top-right::after {",
			"    border-top-color: transparent;",
			"    border-right-color: transparent;",
			"  }",
			"",
			"  .ribbon-top-right::before {",
			"    top: 0;",
			"    left: 0;",
			"  }",
			"",
			"  .ribbon-top-right::after {",
			"    bottom: 0;",
			"    right: 0;",
			"  }",
			"",
			"  .ribbon-top-right span {",
			"    left: -25px;",
			"    top: 30px;",
			"    transform: rotate(45deg);",
			"  }",
			"  ",
			"  .ribbon-bottom-left {",
			"    bottom: -10px;",
			"    left: -10px;",
			"  }",
			"",
			"  .ribbon-bottom-left::before,",
			"  .ribbon-bottom-left::after {",
			"    border-bottom-color: transparent;",
			"    border-left-color: transparent;",
			"  }",
			"",
			"  .ribbon-bottom-left::before {",
			"    bottom: 0;",
			"    right: 0;",
			"  }",
			"",
			"  .ribbon-bottom-left::after {",
			"    top: 0;",
			"    left: 0;",
			"  }",
			"",
			"  .ribbon-bottom-left span {",
			"    right: -25px;",
			"    bottom: 30px;",
			"    transform: rotate(225deg);",
			"  }",
			"  ",
			"  .ribbon-bottom-right {",
			"    bottom: -10px;",
			"    right: -10px;",
			"  }",
			"",
			"  .ribbon-bottom-right::before,",
			"  .ribbon-bottom-right::after {",
			"    border-bottom-color: transparent;",
			"    border-right-color: transparent;",
			"  }",
			"  ",
			"  .ribbon-bottom-right::before {",
			"    bottom: 0;",
			"    left: 0;",
			"  }",
			"",
			"  .ribbon-bottom-right::after {",
			"    top: 0;",
			"    right: 0;",
			"  }",
			"",
			"  .ribbon-bottom-right span {",
			"    left: -25px;",
			"    bottom: 30px;",
			"    transform: rotate(-225deg);",
			"  }",
			"*/"
		],
		"description": ""
	},
	"sm::verticalTimelineWithDynamicBoxes": {
		"prefix": "sm::verticalTimelineWithDynamicBoxes",
		"body": [
			"import \"./Projects.css\";",
			"import InterviewSimulatorImage from \"../../../Assets/Images/interview-screenshot.png\";",
			"import SnippetWebsiteImage from \"../../../Assets/Images/snippets-screenshot.png\";",
			"",
			"function Projects(): JSX.Element {",
			"",
			"    const projects = [",
			"        {\"name\":\"CouponSystem\", \"image\":{InterviewSimulatorImage}.InterviewSimulatorImage, \"link\":\"#\", \"description\":\"JohnBryce final project - fullstack project 'Groo' like.\", \"tags\":\"HTML5, React, JavaScript, Java, MySQL\", skillsTags:[\"React\", \"HTML5\", \"JavaScript\", \"Java\", \"MySQL\"]},",
			"        {\"name\":\"SnippetsWeb\", \"image\":{SnippetWebsiteImage}.SnippetWebsiteImage, \"link\":\"https://sm-snippets.herokuapp.com\", \"description\":\"A single web page written with basic HTML and CSS. This website contains snippets & installation guide.\", skillsTags:[\"HTML5\", \"JavaScript\"]}, ",
			"        {\"name\":\"InterviewSimulator\", \"image\":{InterviewSimulatorImage}.InterviewSimulatorImage, \"link\":\"#\", \"description\":\"Self full stack project. A basic simulator for conducting job interviews as a company & practice as a student.\", skillsTags:[\"React\", \"HTML5\", \"JavaScript\", \"Java\", \"MySQL\"]}]; ",
			"",
			"    return (",
			"        <div className=\"TimeLine2\" id=\"projects\">",
			"\\t\\t    <section id=\"cd-timeline\" className=\"cd-container\">",
			"",
			"            {projects.map(p => ",
			"                <div className=\"cd-timeline-block\">",
			"                    <div className=\"cd-timeline-img cd-picture\">",
			"                </div>",
			"                <div className=\"cd-timeline-content\">",
			"                    <h2>{p.name}</h2>",
			"                    <p>{p.description}",
			"                        <span className=\"cd-date\">Jan 18</span>",
			"                    </p>",
			"                    <img className=\"box\" src={p.image} alt=\"\"/>",
			"                    <ul className=\"content-skills\">",
			"                        {p.skillsTags.map(s => ",
			"                            <li>{s.split} {s}</li>",
			"                            )}",
			"                    </ul>              ",
			"                </div> ",
			"           </div> ",
			"           )}",
			"            ",
			"  </section>",
			"        </div>",
			"    );",
			"}",
			"export default Projects;",
			"",
			"",
			"/* ",
			"CSS:",
			"",
			".Main > * {",
			"  background-color: white;",
			"}",
			"",
			".box {",
			"    width: 200px;",
			"    height: 150px;",
			"    border: 1.5px solid white;",
			"    opacity: 0.48;",
			"    transition: opacity 1s ease 0s; ",
			"    transition: height 1s ease 0s;  ",
			"}",
			"",
			".box:hover {",
			"    height: 250px;",
			"    width: 250px;",
			"}",
			"",
			"html, body {",
			"    height: 100%;",
			"    font-family: \"Open Sans\", sans-serif;",
			"    box-sizing: border-box;",
			"  }",
			"  ",
			"  .cd-container {",
			"    width: 90%;",
			"    max-width: 1080px;",
			"    margin: 0 auto;",
			"    padding: 0 10%;",
			"    border-radius: 2px;",
			"  }",
			"  ",
			"  .cd-container::after {",
			"    content: \"\";",
			"    display: table;",
			"    clear: both;",
			"  }",
			"  ",
			"  #cd-timeline {",
			"    position: relative;",
			"    padding: 2em 0;",
			"    margin-top: 2em;",
			"    margin-bottom: 2em;",
			"  }",
			"  ",
			"  #cd-timeline::before {",
			"    content: \"\";",
			"    position: absolute;",
			"    top: 0;",
			"    left: 25px;",
			"    height: 100%;",
			"    width: 4px;",
			"    background: #003049; ",
			"  }",
			"  ",
			"  @media only screen and (min-width: 1170px) {",
			"    #cd-timeline {",
			"      margin-top: 3em;",
			"      margin-bottom: 3em;",
			"    }",
			"  ",
			"    #cd-timeline::before {",
			"      left: 50%;",
			"      margin-left: -2px;",
			"    }",
			"  }",
			"  .cd-timeline-block {",
			"    position: relative;",
			"    margin: 2em 0;",
			"  }",
			"  ",
			"  .cd-timeline-block:after {",
			"    content: \"\";",
			"    display: table;",
			"    clear: both;",
			"  }",
			"  ",
			"  .cd-timeline-block:first-child {",
			"    margin-top: 0;",
			"  }",
			"  ",
			"  .cd-timeline-block:last-child {",
			"    margin-bottom: 0;",
			"  }",
			"  ",
			"  @media only screen and (min-width: 1170px) {",
			"    .cd-timeline-block {",
			"      margin: 4em 0;",
			"    }",
			"  ",
			"    .cd-timeline-block:first-child {",
			"      margin-top: 0;",
			"    }",
			"  ",
			"    .cd-timeline-block:last-child {",
			"    .cd-timeline-block:last-child {",
			"      margin-bottom: 0;",
			"    }",
			"  }",
			"  .cd-timeline-img {",
			"    position: absolute;",
			"    top: 8px;",
			"    left: 12px;",
			"    width: 30px;",
			"    height: 30px;",
			"    border-radius: 50%;",
			"    box-shadow: 0 0 0 4px #1e5979, inset 0 2px 0 rgba(0, 0, 0, 0.08), 0 3px 0 4px rgba(0, 0, 0, 0.05);",
			"  }",
			"  ",
			"  .cd-timeline-img {",
			"    background: #003049;",
			"  }",
			"  ",
			"  @media only screen and (min-width: 1170px) {",
			"    .cd-timeline-img {",
			"      width: 30px;",
			"      height: 30px;",
			"      left: 50%;",
			"      margin-left: -15px;",
			"      margin-top: 15px;",
			"      -webkit-transform: translateZ(0);",
			"      -webkit-backface-visibility: hidden;",
			"    }",
			"  }",
			"  .cd-timeline-content {",
			"    position: relative;",
			"    margin-left: 60px;",
			"    margin-right: 30px;",
			"    background: #333C42;",
			"    border-radius: 2px;",
			"    padding: 1em;",
			"  }",
			"  .cd-timeline-content .timeline-content-info {",
			"    background: #2B343A;",
			"    padding: 5px 10px;",
			"    color: rgba(255, 255, 255, 0.7);",
			"    font-size: 12px;",
			"    box-shadow: inset 0 2px 0 rgba(0, 0, 0, 0.08);",
			"    border-radius: 2px;",
			"  }",
			"  .cd-timeline-content .timeline-content-info i {",
			"    margin-right: 5px;",
			"  }",
			"  .cd-timeline-content .timeline-content-info .timeline-content-info-title, .cd-timeline-content .timeline-content-info .timeline-content-info-date {",
			"    width: calc(50% - 2px);",
			"    display: inline-block;",
			"  }",
			"  @media (max-width: 500px) {",
			"    .cd-timeline-content .timeline-content-info .timeline-content-info-title, .cd-timeline-content .timeline-content-info .timeline-content-info-date {",
			"      display: block;",
			"      width: 100%;",
			"    }",
			"  }",
			"  .cd-timeline-content .content-skills {",
			"    font-size: 12px;",
			"    padding: 0;",
			"    margin-bottom: 0;",
			"    display: flex;",
			"    flex-wrap: wrap;",
			"    justify-content: center;",
			"  }",
			"  .cd-timeline-content .content-skills li {",
			"    background: #40484D;",
			"    border-radius: 2px;",
			"    display: inline-block;",
			"    padding: 2px 10px;",
			"    color: rgba(255, 255, 255, 0.7);",
			"    margin: 3px 2px;",
			"    text-align: center;",
			"    flex-grow: 1;",
			"  }",
			"  ",
			"  .cd-timeline-content:after {",
			"    content: \"\";",
			"    display: table;",
			"    clear: both;",
			"  }",
			"  ",
			"  .cd-timeline-content h2 {",
			"    color: rgba(255, 255, 255, 0.9);",
			"    margin-top: 0;",
			"    margin-bottom: 5px;",
			"  }",
			"  ",
			"  .cd-timeline-content p, .cd-timeline-content .cd-date {",
			"    color: rgba(255, 255, 255, 0.7);",
			"    font-size: 13px;",
			"    font-size: 0.8125rem;",
			"  }",
			"  ",
			"  .cd-timeline-content .cd-date {",
			"    display: inline-block;",
			"  }",
			"  ",
			"  .cd-timeline-content p {",
			"    margin: 1em 0;",
			"    line-height: 1.6;",
			"  }",
			"  ",
			"  .cd-timeline-content::before {",
			"    content: \"\";",
			"    position: absolute;",
			"    top: 16px;",
			"    right: 100%;",
			"    height: 0;",
			"    width: 0;",
			"    border: 7px solid transparent;",
			"    border-right: 7px solid #333C42;",
			"  }",
			"  ",
			"  @media only screen and (min-width: 768px) {",
			"    .cd-timeline-content h2 {",
			"      font-size: 20px;",
			"      font-size: 1.25rem;",
			"    }",
			"  ",
			"    .cd-timeline-content p {",
			"      font-size: 16px;",
			"      font-size: 1rem;",
			"    }",
			"  ",
			"    .cd-timeline-content .cd-read-more, .cd-timeline-content .cd-date {",
			"      font-size: 14px;",
			"      font-size: 0.875rem;",
			"    }",
			"  }",
			"  @media only screen and (min-width: 1170px) {",
			"    .cd-timeline-content {",
			"      color: white;",
			"      margin-left: 0;",
			"      padding: 1.6em;",
			"      width: 36%;",
			"      margin: 0 5%;",
			"    }",
			"  ",
			"    .cd-timeline-content::before {",
			"      top: 24px;",
			"      left: 100%;",
			"      border-color: transparent;",
			"      border-left-color: #333C42;",
			"    }",
			"  ",
			"    .cd-timeline-content .cd-date {",
			"      position: absolute;",
			"      width: 100%;",
			"      left: 122%;",
			"      top: 6px;",
			"      font-size: 16px;",
			"      font-size: 1rem;",
			"    }",
			"  ",
			"    .cd-timeline-block:nth-child(even) .cd-timeline-content {",
			"      float: right;",
			"    }",
			"  ",
			"    .cd-timeline-block:nth-child(even) .cd-timeline-content::before {",
			"      top: 24px;",
			"      left: auto;",
			"      right: 100%;",
			"      border-color: transparent;",
			"      border-right-color: #333C42;",
			"    }",
			"  ",
			"    .cd-timeline-block:nth-child(even) .cd-timeline-content .cd-read-more {",
			"      float: right;",
			"    }",
			"  ",
			"    .cd-timeline-block:nth-child(even) .cd-timeline-content .cd-date {",
			"      left: auto;",
			"      right: 122%;",
			"      text-align: right;",
			"    }",
			"  }",
			"  */"
		],
		"description": "Creates a vertical timeline that uses dynamic(mapping) boxes to display each timeline element"
	},
	"sm::createAppState": {
		"prefix": "sm::createAppState",
		"body": [
			"import ObjectModel from '../Models/ObjectModel';",
			"",
			"",
			"// Step 1 - Create AppState and manage the collection once and in a centralize place",
			"export class ObjectAppState {",
			"    public cats: ObjectModel[] = [];",
			"}",
			"",
			"//Step 2 - Define ActionType using enum for all required operations",
			"export enum ObjectActionType {",
			"    ObjectDownloaded= \"ObjectDownloaded\",",
			"    ObjectAdded = \"ObjectAdded\",",
			"    ObjectUpdated = \"ObjectUpdated\",",
			"    ObjectDeleted = \"ObjectDeleted\"",
			"}",
			"",
			"// Step 3 - Define Action Interface to describe actionAction & payload if needed",
			"export interface ObjectStateAction {",
			"    type: ObjectActionType;",
			"    payload?: any;",
			"}",
			"",
			"// Step 4 - Export Action Creators functions that gets payload and return relevant Action",
			"export function objectDownloadedAction(objectArr: ObjectModel[]): ObjectStateAction {",
			"    return { type: ObjectActionType.ObjectDownloaded, payload: object };",
			"}",
			"export function objectAddedAction(objectArr: ObjectModel): ObjectStateAction {",
			"    return { type: ObjectActionType.ObjectAdded, payload: Object };",
			"}",
			"",
			"export function objectUpdatedAction(objectArr: ObjectModel): ObjectStateAction {",
			"    return { type: ObjectActionType.ObjectUpdated, payload: Object };",
			"}",
			"",
			"export function objectDeletedAction(id:number): ObjectStateAction {",
			"    return { type: ObjectActionType.ObjectDeleted, payload: id };",
			"}",
			"",
			"// Step 5 - Reducer function perform the required action",
			"export function objectReducer(currentState: ObjectAppState = new ObjectAppState(), action: ObjectStateAction): ObjectAppState{   ",
			"    const newState = {...currentState} //Spread Operator",
			"    switch (action.type) {",
			"        case ObjectActionType.ObjectDownloaded:",
			"            newState.cats = action.payload;",
			"            break;",
			"        case ObjectActionType.ObjectAdded:",
			"            newState.cats.push(action.payload);",
			"            break;",
			"        case ObjectActionType.ObjectUpdated:",
			"            break;",
			"        case ObjectActionType.ObjectDeleted:",
			"            newState.cats = newState.cats.filter(o => o.id !== action.payload);",
			"            break;",
			"    }",
			"    return newState;",
			"}",
			"",
			"/* Store.ts:",
			"import { combineReducers, createStore } from \"redux\";",
			"import { catsReducer } from \"./CatsState\";",
			"",
			"// Single Reducer",
			"//const store = createStore(catsReducer);",
			"",
			"// For getting data",
			"//const xyz = store.getState().cats;",
			"",
			"//Multiple catsReducer",
			"const reducers = combineReducers({ catState: catsReducer });",
			"const store = createStore(reducers)",
			"",
			"// For getting data",
			"//const xyz = store.getState().catState.cats;",
			"",
			"export default store;",
			"*/"
		],
		"description": "Creates application single state for an object"
	},
	"sm::implementRouting": {
		"prefix": "sm::implementRouting",
		"body": [
			"/* ",
			"* Install: npm i react-router-dom @types/react-router-dom",
			"",
			"* Routing class:",
			"import { Redirect, Route, Switch } from \"react-router-dom\";",
			"import About from \"../../AboutAreat/About/About\";",
			"import Home from \"../../HomeArea/Home/Home\";",
			"import Page404 from \"../../SharedArea/Page404/Page404\";",
			"import \"./Routing.css\";",
			"",
			"function Routing(): JSX.Element {",
			"    return (",
			"        <div className=\"Routing\">",
			"\\t\\t\\t<Switch>",
			"                <Route path=\"/home\" component={Home} exact />",
			"                <Redirect from=\"/\" to=\"/home\" exact/>",
			"                <Route component={Page404}/> ",
			"                </Switch>",
			"                </div>",
			"            );",
			"        }",
			"        ",
			"        export default Routing;",
			"",
			"* Menu class: ",
			"import { NavLink } from \"react-router-dom\";",
			"import \"./Menu.css\";",
			"",
			"function Menu(): JSX.Element {",
			"    return (",
			"        <div className=\"Menu\">",
			"\\t\\t\\t\\t\\t\\t<nav>",
			"                <NavLink to=\"/home\" exact>Home</NavLink>",
			"            </nav>",
			"        </div>",
			"    );",
			"}",
			"export default Menu;",
			"",
			"* App class: ",
			"import './App.css';",
			"import Header from './Components/LayoutArea/Header/Header';",
			"import Footer from './Components/LayoutArea/Footer/Footer';",
			"import { BrowserRouter } from \"react-router-dom\";",
			"import Routing from './Components/LayoutArea/Routing/Routing';",
			"",
			"function App() {",
			"  return (",
			"    <BrowserRouter>",
			"    <div className=\"App\">",
			"        <Header/>",
			"        <Routing/> ",
			"        <Footer/>",
			"    </div>",
			"    </BrowserRouter>",
			"  );",
			"}",
			"export default App;",
			"*/"
		],
		"description": ""
	},
	"sm::handleAlertsWithExternalLibrary": {
		"prefix": "sm::handleAlertsWithExternalLibrary",
		"body": [
			"import {Notyf} from 'notyf'",
			"",
			"/* Inside index.html: */ <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.css\">",
			"",
			"export enum SccMsg {",
			"    LOGIN_SUCCESSFULLY = \"Logged in successfully\",",
			"    LOGOUT_SUCCESSFULLY = \"Logged out successfully\",",
			"}",
			"",
			"export enum ErrMsg {",
			"    FAILED_TO_EXECUTE = 'Failed to execute'",
			"}",
			"",
			"class Notify {",
			"",
			"    private notification = new Notyf({duration:4000, position:{x:\"left\",y:\"top\"}});",
			"",
			"    public success(message: string) {",
			"        this.notification.success(message);",
			"    }",
			"",
			"    public error(err: any) {",
			"        const msg = this.extractMsg(err);",
			"        this.notification.error(msg);",
			"    }",
			"",
			"    private extractMsg(err: any): string {",
			"\\t\\tif(typeof err === 'string'){",
			"            return err;",
			"        }",
			"        if(typeof err?.response?.data === 'string') { //Backend exact error",
			"            return err.response.data;",
			"        }",
			"        if(Array.isArray(err?.response?.data)) { // Backend exact error list",
			"            return err?.response?.data[0];",
			"        }",
			"\\t\\t// Must be last",
			"        if(typeof err?.message === 'string'){",
			"            return err.message;",
			"        }",
			"        return \"An error occurred, please try again.\";",
			"    }",
			"}",
			"",
			"const notify = new Notify();",
			"",
			"export default notify;"
		],
		"description": "Template for handling alerts using Notyf library"
	},
	"sm::tokenInterceptorAxios": {
		"prefix": "",
		"body": [
			"import axios from 'axios';",
			"import store from '../Components/Redux/Store';",
			"",
			"const tokenAxios = axios.create();",
			"",
			"tokenAxios.interceptors.request.use(request => {",
			"    request.headers = {",
			"        \"Authorization\": store.getState().authState.user?.token",
			"    };",
			"    return request;",
			"});",
			"",
			"export default tokenAxios;"
		]
	},
	"sm::searchBox": {
		"prefix": "sm::searchBox",
		"body": [
			"import \"./SearchBox.css\";",
			"",
			"interface Props {",
			"    onSearch(value: string): void;",
			"}",
			"",
			"const SearchBox: React.FC<Props> = ({onSearch}) => {",
			"    return (",
			"        <div className=\"SearchBox\">",
			"            <div>",
			"                <input type=\"text\" className=\"inputBox\" placeholder=\"&#x1F50E;  Search through our database...\" onChange={(event) => onSearch( event.target.value)}/>",
			"                <span>",
			"                </span>",
			"            </div>",
			"        </div>",
			"    );",
			"};",
			"",
			"export default SearchBox;",
			"",
			"/* CSS: ",
			".SearchBox {",
			"    background-color: rgba(255, 255, 255, 0.904);",
			"    padding: 1%;",
			"    filter: drop-shadow(0 0 0.25rem black);",
			"}",
			"",
			".searchBtn {",
			"    margin: 1%;",
			"    float: center;",
			"    font-size: 10px;",
			"}",
			"",
			".flex {",
			"    display: flex;",
			"    flex-direction: row;",
			"}",
			"",
			".inputBox {",
			"    height: 25px;",
			"    width: 23%;",
			"    background-color: #F2F2F2;",
			"    border: 1px solid #cac8c8;",
			"    font-family:sans-serif;",
			"}",
			"",
			".filterBtn {",
			"    float: center;",
			"    font-size: 10px;",
			"}",
			"",
			".grey {",
			"    background-color: #9e9c9c; ",
			"}",
			"*/",
			"",
			"/* Parent Component example: ",
			"    handleSearch = (searchValue: string) => {",
			"        const coupons = this.filterCoupons(this.state.coupons, searchValue);",
			"        this.setState(searchValue ? {coupons} : {coupons: store.getState().couponsState.coupons});",
			"    };",
			"",
			"    filterCoupons = (coupons: CouponsModel[], filterValue: string) => {",
			"        const caseInsensitiveFilterValue = filterValue?.toLowerCase();",
			"        return caseInsensitiveFilterValue ?",
			"            coupons.filter(coupon =>",
			"                coupon.title.toLowerCase().includes(caseInsensitiveFilterValue) ||",
			"                coupon.couponCategory.toString().toLowerCase().includes(caseInsensitiveFilterValue) ||",
			"                coupon.description.toLowerCase().includes(caseInsensitiveFilterValue)",
			"            ) : coupons;",
			"    };",
			"",
			"        public render(): JSX.Element {",
			"        return (",
			"            <React.Fragment> ",
			"            <SearchBox onSearch={this.handleSearch}/>",
			"            <div>",
			"",
			"            </div>",
			"            </React.Fragment>",
			"        );",
			"    }",
			"}",
			"*/",
			"",
			""
		],
		"description": ""
	}
}
